/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package testconnection;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.Properties;
import java.util.Objects;
import oracle.jdbc.pool.OracleDataSource;
import oracle.jdbc.OracleConnection;
import java.sql.DatabaseMetaData;

public class App {
    public static void main(String[] args) {
        Properties info = new Properties();     
		final String DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
		final String DB_USER = "system";
		final String DB_PASSWORD = "password";
		final String SQL = "select * from test_table where 1=? and first_name=?";

		info.put(OracleConnection.CONNECTION_PROPERTY_USER_NAME, DB_USER);
		info.put(OracleConnection.CONNECTION_PROPERTY_PASSWORD, DB_PASSWORD);          
		info.put(OracleConnection.CONNECTION_PROPERTY_DEFAULT_ROW_PREFETCH, "20"); 
		OracleDataSource ods = null;
		try{
			ods = new OracleDataSource();
			ods.setURL(DB_URL);    
			ods.setConnectionProperties(info);
		} catch (SQLException e) {
			e.printStackTrace();
			System.exit(1);
		} catch (Exception e) {
			e.printStackTrace();
			System.exit(1);
		}finally{
			// if(Objects.isNull(ods)){
			// 	System.out.println("OracleDataSourceの初期化に失敗しました。");
			// 	System.exit(1);
			// }
		}
		if(Objects.isNull(ods)){
			System.out.println("OracleDataSourceの初期化に失敗しました。");
			System.exit(1);
		}
		try (OracleConnection connection = (OracleConnection) ods.getConnection()) {
			// Get the JDBC driver name and version 
			DatabaseMetaData dbmd = connection.getMetaData();       
			System.out.println("Driver Name: " + dbmd.getDriverName());
			System.out.println("Driver Version: " + dbmd.getDriverVersion());
			// Print some connection properties
			System.out.println("Default Row Prefetch Value is: " + 
			   connection.getDefaultRowPrefetch());
			System.out.println("Database Username is: " + connection.getUserName());
            System.out.println();

            PreparedStatement ps = connection.prepareStatement(SQL);
            ps.setInt(1, 1);
            ps.setString(2, "Tony");
    
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                System.out.println(
                    rs.getInt("id") + " " +
                    rs.getString("first_name") + " " +
                    rs.getString("second_name")
                );
            }           
             
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			System.out.println("処理が完了しました");
		}
    }
}
